digraph doxygraph
{
graph [ rankdir="RL" ]
"class_circular_buffer" [ label="CircularBuffer\n|+CircularBuffer ( array : node *const &, length : const size_t )\l+counterToIndex ( lcounter : uint32_t ) : size_t\l+enqueue ( data : const T &, new_tm_page : tm_page * ) : void\l+getCounterId (  ) : size_t\l+getHead (  ) : size_t\l+getLength (  ) : size_t\l+getState ( time : timeabs &, idx : size_t & ) : void\l+nodeIsReady ( idx : const size_t ) : bool\l+readEvent ( event : Event\< T \> &, index : const size_t ) : void\l-getCounterCurrentPage ( counter : uint64_t ) : uint32_t\l-getCounterCurrentTimestamp ( counter : uint64_t ) : uint64_t\l-getCounterValue ( counter : uint64_t ) : size_t\l-setCounterCurrentPage ( counter : uint64_t &, t : uint32_t ) : void\l-setCounterValue ( counter : uint64_t &, idx : size_t ) : void\l|+counter : std::atomic\< uint64_t \>\l+local_tm_page : tm_page\l-ca_accesspointer : struct nd *const\l-ca_length : const size_t\l" shape="record" ]
"struct_circular_buffer_1_1nd"
"class_circular_buffer" -> "struct_circular_buffer_1_1nd" [ arrowtail="odiamond" dir="back" ]
"struct_circular_buffer_1_1nd" [ label="CircularBuffer::nd\n||+ev : Event\< T \>\l+state : std::atomic\< st \>\l" shape="record" ]
"class_event"
"struct_circular_buffer_1_1nd" -> "class_event" [ arrowtail="diamond" dir="back" ]
"struct_circular_buffer_1_1timming__page" [ label="CircularBuffer::timming_page\n|+timming_page (  )\l+timming_page ( t : uint64_t )\l|+current_time : uint64_t\l" shape="record" ]
"class_event" [ label="Event\n|+Event (  )\l+Event ( data : const T &, time : const timespan & )\l+getData (  ) : T &\l+getData (  ) : const T &\l+getTime (  ) : timespan\l+getTime (  ) : const timespan &\l+isNull (  ) : bool\l+operator!= ( event : Event\< T \> const & ) : bool\l+operator!= ( event : const Event & ) : bool\l+operator!= ( time : const timespan & ) : bool\l+operator!= ( time : const timespan &, event : const Event\< D \> & ) : friend bool\l+operator\< ( event : Event const & ) : bool\l+operator\< ( event : const Event & ) : bool\l+operator\< ( time : const timespan & ) : bool\l+operator\< ( time : const timespan &, event : const Event\< D \> & ) : friend bool\l+operator\<= ( event : Event const & ) : bool\l+operator\<= ( event : const Event & ) : bool\l+operator\<= ( time : const timespan & ) : bool\l+operator\<= ( time : const timespan &, event : const Event\< D \> & ) : friend bool\l+operator= ( event : const Event\< T \> * ) : Event\< T \> &\l+operator== ( event : Event\< T \> const & ) : bool\l+operator== ( event : const Event & ) : bool\l+operator== ( time : const timespan & ) : bool\l+operator== ( time : const timespan &, event : const Event\< D \> & ) : friend bool\l+operator\> ( event : Event const & ) : bool\l+operator\> ( event : const Event & ) : bool\l+operator\> ( time : const timespan & ) : bool\l+operator\> ( time : const timespan &, event : const Event\< D \> & ) : friend bool\l+operator\>= ( event : Event const & ) : bool\l+operator\>= ( event : const Event & ) : bool\l+operator\>= ( time : const timespan & ) : bool\l+operator\>= ( time : const timespan &, event : const Event\< D \> & ) : friend bool\l+setTime ( t : timespan ) : void\l|-data : T\l-time : timespan\l" shape="record" ]
"class_r_t_e_m_l__buffer" [ label="RTEML_buffer\n|+RTEML_buffer (  )\l+debug (  ) : void\l+getBuffer (  ) : CircularBuffer\< T \> *const\l+getLength (  ) : size_t\l|-array : cb::node\l-buffer : CircularBuffer\< T \>\l-writer : bool\l" shape="record" ]
"class_r_t_e_m_l__buffer" -> "class_circular_buffer" [ arrowtail="diamond" dir="back" ]
"class_r_t_e_m_l__monitor" [ label="RTEML_monitor\n«abstract»\n|+RTEML_monitor ( period : const useconds_t )\l+RTEML_monitor ( period : const useconds_t, policy : unsigned int, priority : unsigned int )\l+enable (  ) : int\l+getPeriod (  ) : const useconds_t &\l+isRunning (  ) : bool\l+setPeriod ( p : const useconds_t & ) : void\l#run (  ) : void \{pure-virtual\}\l-loop (  : void * ) : void * \{static\}\l|-m_state : struct RTEML_monitor::Monitor_state\l-thread : pthread_t\l" shape="record" ]
"struct_r_t_e_m_l__monitor_1_1_monitor__state"
"class_r_t_e_m_l__monitor" -> "struct_r_t_e_m_l__monitor_1_1_monitor__state" [ arrowtail="diamond" dir="back" ]
"struct_r_t_e_m_l__monitor_1_1_monitor__state" [ label="RTEML_monitor::Monitor_state\n|+Monitor_state ( sch : const int, prio : const int, p : const useconds_t )\l|+cond : pthread_cond_t\l+fmtx : pthread_mutex_t\l+period : useconds_t\l+priority : const int\l+sched_policy : const int\l+status : mon_status\l" shape="record" ]
"class_r_t_e_m_l__reader" [ label="RTEML_reader\n|+RTEML_reader ( buffer : const CircularBuffer\< T \> * )\l+consistencyCheck (  ) : bool\l+dequeue ( idx : int ) : std::pair\< state_rd_t, Event\< T \> & \>\l+dequeueArray ( event : Event\< T \> *, isConsitent : bool & ) : bool\l+getCurrentBufferState ( time : timeabs &, idx : size_t & ) : void\l+getHigherIdx (  ) : size_t\l+getLowerIdx (  ) : size_t\l+synchronize ( time : timeabs ) : bool\l|-buffer : const CircularBuffer\< T \> *\l-lastread_ts : timeabs\l-n_elems_reader : size_t\l" shape="record" ]
"class_r_t_e_m_l__reader" -> "class_circular_buffer" [ arrowtail="odiamond" dir="back" ]
"class_r_t_e_m_l__writer" [ label="RTEML_writer\n|+RTEML_writer ( buffer : CircularBuffer\< T \> *const )\l+enqueue ( data : const T & ) : void\l+setBuffer ( buffer : CircularBuffer\< T \> * ) : void\l|-buffer : CircularBuffer\< T \> *const\l-new_tm_page : cb::tm_page\l" shape="record" ]
"class_r_t_e_m_l__writer" -> "class_circular_buffer" [ arrowtail="odiamond" dir="back" ]
"structtask" [ label="task\n|+create_task ( loop : void *(*)(void *), priority : const int, sched_policy : const int, stack_size : int ) : int\l+task ( id : char *, loop : void *(*)(void *), prio : const int, sch_policy : const int, p : const useconds_t )\l|+cond : pthread_cond_t\l+fmtx : pthread_mutex_t\l+period : const useconds_t\l+priority : const int\l+run : void *(*\l+running : bool\l+sched_policy : const int\l+st : status\l+thread : pthread_t\l+tid : char *\l" shape="record" ]
}
